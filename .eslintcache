[{"C:\\JavaScript\\my-app\\src\\index.js":"1","C:\\JavaScript\\my-app\\src\\App.js":"2","C:\\JavaScript\\my-app\\src\\components\\Header.jsx":"3","C:\\JavaScript\\my-app\\src\\components\\Navbar.jsx":"4","C:\\JavaScript\\my-app\\src\\components\\Profile.jsx":"5"},{"size":164,"mtime":1608997157122,"results":"6","hashOfConfig":"7"},{"size":332,"mtime":1609069191441,"results":"8","hashOfConfig":"7"},{"size":209,"mtime":1609072941646,"results":"9","hashOfConfig":"7"},{"size":429,"mtime":1609068969761,"results":"10","hashOfConfig":"7"},{"size":621,"mtime":1609069178880,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1xri4gc",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"14"},"C:\\JavaScript\\my-app\\src\\index.js",[],["26","27"],"C:\\JavaScript\\my-app\\src\\App.js",[],"C:\\JavaScript\\my-app\\src\\components\\Header.jsx",[],"C:\\JavaScript\\my-app\\src\\components\\Navbar.jsx",["28","29","30","31","32"],"import React from 'react';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className='nav'>\r\n        <div>\r\n          <a>Profile</a>\r\n        </div>\r\n        <div>\r\n          <a>Messages</a>\r\n        </div>\r\n        <div>\r\n          <a>News</a>\r\n        </div>\r\n        <div>\r\n          <a>Music</a>\r\n        </div>\r\n        <div>\r\n          <a>Settings</a>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;",["33","34"],"C:\\JavaScript\\my-app\\src\\components\\Profile.jsx",["35"],"import React from 'react';\r\n\r\nconst Profile = () => {\r\n    return (\r\n      <div className='content'>\r\n        <div>\r\n          <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR0_IoZ1zN3m5kSH-vs3pd4otJhincC9ZuvsQ&usqp=CAU'></img>\r\n        </div>\r\n        <div>\r\n          ava + desc\r\n      </div>\r\n        <div>\r\n          my posts\r\n        <div>\r\n            new post\r\n        </div>\r\n          <div>\r\n            <div>\r\n              post 1\r\n          </div>\r\n            <div>\r\n              post 2\r\n          </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Profile;",{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":7,"column":11,"nodeType":"42","endLine":7,"endColumn":14},{"ruleId":"40","severity":1,"message":"41","line":10,"column":11,"nodeType":"42","endLine":10,"endColumn":14},{"ruleId":"40","severity":1,"message":"41","line":13,"column":11,"nodeType":"42","endLine":13,"endColumn":14},{"ruleId":"40","severity":1,"message":"41","line":16,"column":11,"nodeType":"42","endLine":16,"endColumn":14},{"ruleId":"40","severity":1,"message":"41","line":19,"column":11,"nodeType":"42","endLine":19,"endColumn":14},{"ruleId":"36","replacedBy":"43"},{"ruleId":"38","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":7,"column":11,"nodeType":"42","endLine":7,"endColumn":122},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["47"],["48"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]